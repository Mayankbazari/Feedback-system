{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mayank Bazari\\\\Desktop\\\\react-redux-application\\\\src\\\\pages\\\\PostsPage.js\";\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postsActions';\nimport { Post } from '../components/Post';\n\nvar PostsPage = function PostsPage(_ref) {\n  var dispatch = _ref.dispatch,\n      loading = _ref.loading,\n      posts = _ref.posts,\n      hasErrors = _ref.hasErrors;\n  useEffect(function () {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  var renderPosts = function renderPosts() {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, \"Loading posts...\");\n    if (hasErrors) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 27\n      }\n    }, \"Unable to display posts.\");\n    return posts.map(function (post) {\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post.id,\n        post: post,\n        excerpt: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 30\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Posts\"), renderPosts());\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.posts.loading,\n    posts: state.posts.posts,\n    hasErrors: state.posts.hasErrors\n  };\n};\n\nexport default connect(mapStateToProps)(PostsPage);","map":{"version":3,"sources":["C:/Users/Mayank Bazari/Desktop/react-redux-application/src/pages/PostsPage.js"],"names":["React","useEffect","connect","fetchPosts","Post","PostsPage","dispatch","loading","posts","hasErrors","renderPosts","map","post","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA6C;AAAA,MAA1CC,QAA0C,QAA1CA,QAA0C;AAAA,MAAhCC,OAAgC,QAAhCA,OAAgC;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC7DR,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;;AAIA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACb,QAAIE,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AAEf,WAAOD,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,0BAAI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,OAAO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAAd,CAAP;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGF,WAAW,EAFd,CADF;AAMD,CAlBD;;AAoBA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCR,IAAAA,OAAO,EAAEQ,KAAK,CAACP,KAAN,CAAYD,OADW;AAEhCC,IAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYA,KAFa;AAGhCC,IAAAA,SAAS,EAAEM,KAAK,CAACP,KAAN,CAAYC;AAHS,GAAL;AAAA,CAA7B;;AAMA,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBT,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPosts } from '../actions/postsActions'\n\nimport { Post } from '../components/Post'\n\nconst PostsPage = ({ dispatch, loading, posts, hasErrors }) => {\n  useEffect(() => {\n    dispatch(fetchPosts())\n  }, [dispatch])\n\n  const renderPosts = () => {\n    if (loading) return <p>Loading posts...</p>\n    if (hasErrors) return <p>Unable to display posts.</p>\n\n    return posts.map(post => <Post key={post.id} post={post} excerpt />)\n  }\n\n  return (\n    <section>\n      <h1>Posts</h1>\n      {renderPosts()}\n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors,\n})\n\nexport default connect(mapStateToProps)(PostsPage)\n"]},"metadata":{},"sourceType":"module"}