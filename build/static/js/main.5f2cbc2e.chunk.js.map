{"version":3,"sources":["actions/postsActions.js","components/Post.js","pages/PostsPage.js","actions/postActions.js","actions/commentsActions.js","components/Comment.js","pages/SinglePostPage.js","App.js","reducers/postsReducer.js","reducers/postReducer.js","reducers/commentsReducer.js","reducers/index.js","index.js"],"names":["GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","getPosts","type","getPostsSuccess","posts","payload","getPostsFailure","Post","_ref","post","excerpt","react_default","a","createElement","className","title","body","substring","react_router_dom","to","concat","id","placeholder","connect","state","loading","hasErrors","dispatch","useEffect","Object","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","t0","stop","_x","apply","this","arguments","map","Post_Post","key","GET_POST","GET_POST_SUCCESS","GET_POST_FAILURE","getPost","getPostSuccess","getPostFailure","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","getComments","getCommentsSuccess","comments","getCommentsFailure","Comment","comment","email","match","postId","params","fetchPost","Comment_Comment","App","react_router","exact","path","component","PostsPage","SinglePostPage","initialState","rootReducer","combineReducers","length","undefined","action","actions","objectSpread2","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f2cbc2e.chunk.js","sourcesContent":["export const GET_POSTS = 'GET POSTS'\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE'\n\nexport const getPosts = () => ({ type: GET_POSTS })\nexport const getPostsSuccess = posts => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts,\n})\nexport const getPostsFailure = () => ({ type: GET_POSTS_FAILURE })\n\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(getPosts())\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts')\n      const data = await response.json()\n\n      dispatch(getPostsSuccess(data))\n    } catch (error) {\n      dispatch(getPostsFailure())\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Post.css\";\n\nexport const Post = ({ post, excerpt }) => (\n  <div className={excerpt ? \"post-excerpt\" : \"posts\"}>\n    {/* <div className=\"post\">  */}\n    <div className=\"author\">\n      <p>Roushan sinha ,web Developer</p>\n      <p> posted a minute ago</p>\n    </div>\n    <h2>{post.title}</h2>\n    <div className=\"role\">Data Scientis, Google, Maachine learning</div>\n    <p>{excerpt ? post.body.substring(0, 100) : post.body}</p>\n    {/* <h2>{post.title}</h2> */}\n    {/* <p>{excerpt ? post.body.substring(0, 100) : post.body}</p> */}\n\n    {excerpt && (\n      <Link to={`/posts/${post.id}`} className=\"button\">\n        View Post\n      </Link>\n    )}\n    <div className=\"commentSection\">\n      <input type=\"text-area\" placeholder=\"Add comments here \" />\n      <button>Add</button>\n    </div>\n  </div>\n  // </div>\n);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchPosts } from \"../actions/postsActions\";\n\nimport { Post } from \"../components/Post\";\n\nconst PostsPage = ({ dispatch, loading, posts, hasErrors }) => {\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const renderPosts = () => {\n    if (loading) return <p>Loading posts...</p>;\n    if (hasErrors) return <p>Unable to display posts.</p>;\n\n    return posts.map((post) => <Post key={post.id} post={post} excerpt />);\n  };\n\n  return <section>{renderPosts()}</section>;\n};\n\nconst mapStateToProps = (state) => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors,\n});\n\nexport default connect(mapStateToProps)(PostsPage);\n","export const GET_POST = 'GET POSTS'\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS'\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE'\n\nexport const getPost = () => ({ type: GET_POST })\nexport const getPostSuccess = post => ({\n  type: GET_POST_SUCCESS,\n  payload: post,\n})\nexport const getPostFailure = () => ({ type: GET_POST_FAILURE })\n\nexport function fetchPost(id) {\n  return async dispatch => {\n    dispatch(getPost())\n\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/posts/${id}`\n      )\n      const data = await response.json()\n\n      dispatch(getPostSuccess(data))\n    } catch (error) {\n      dispatch(getPostFailure())\n    }\n  }\n}\n","export const GET_COMMENTS = 'GET COMMENTS'\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS'\nexport const GET_COMMENTS_FAILURE = 'GET_COMMENTS_FAILURE'\n\nexport const getComments = () => ({ type: GET_COMMENTS })\nexport const getCommentsSuccess = comments => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload: comments,\n})\nexport const getCommentsFailure = () => ({ type: GET_COMMENTS_FAILURE })\n\nexport function fetchComments(postId) {\n  return async dispatch => {\n    dispatch(getComments())\n\n    try {\n      const response = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n      )\n      const data = await response.json()\n\n      dispatch(getCommentsSuccess(data))\n    } catch (error) {\n      dispatch(getCommentsFailure())\n    }\n  }\n}\n","import React from \"react\";\nimport \"./comments.css\";\n\nexport const Comment = ({ comment }) => (\n  <aside className=\"comment\">\n    <h2>{comment.title}</h2>\n    <h3>{comment.email}</h3>\n    <p>{comment.body}</p>\n  </aside>\n);\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPost } from '../actions/postActions'\nimport { fetchComments } from '../actions/commentsActions'\n\nimport { Post } from '../components/Post'\nimport { Comment } from '../components/Comment'\n\nconst SinglePostPage = ({\n  match,\n  dispatch,\n  post,\n  comments,\n  hasErrors,\n  loading,\n}) => {\n  useEffect(() => {\n    const { id } = match.params\n\n    dispatch(fetchComments(id))\n    dispatch(fetchPost(id))\n  }, [dispatch, match])\n\n  const renderPost = () => {\n    if (loading.post) return <p>Loading post...</p>\n    if (hasErrors.post) return <p>Unable to display post.</p>\n\n    return <Post post={post} />\n  }\n\n  const renderComments = () => {\n    if (loading.comments) return <p>Loading comments...</p>\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\n\n    return comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))\n  }\n\n  return (\n    <section>\n      {renderPost()}\n      <h2>Comments</h2>\n      {renderComments()}\n    </section>\n  )\n}\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: { post: state.post.loading, comments: state.comments.loading },\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\n})\n\nexport default connect(mapStateToProps)(SinglePostPage)\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n// import { Navbar } from \"./components/Navbar\";\nimport PostsPage from \"./pages/PostsPage\";\nimport SinglePostPage from \"./pages/SinglePostPage\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        {/* <Route exact path=\"/\" component={DashboardPage} /> */}\n        <Route exact path=\"/\" component={PostsPage} />\n        <Route exact path=\"/posts/:id\" component={SinglePostPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as actions from '../actions/postsActions'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  posts: [],\n}\n\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_POSTS:\n      return { ...state, loading: true }\n    case actions.GET_POSTS_SUCCESS:\n      return { posts: action.payload, loading: false, hasErrors: false }\n    case actions.GET_POSTS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import * as actions from '../actions/postActions'\n\nexport const initialState = {\n  loading: true,\n  hasErrors: false,\n  post: {},\n}\n\nexport default function postReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_POST:\n      return { ...state, loading: true }\n    case actions.GET_POST_SUCCESS:\n      return { post: action.payload, loading: false, hasErrors: false }\n    case actions.GET_POST_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import * as actions from '../actions/commentsActions'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  comments: [],\n}\n\nexport default function commentsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_COMMENTS:\n      return { ...state, loading: true }\n    case actions.GET_COMMENTS_SUCCESS:\n      return { ...state, comments: action.payload, loading: false, hasErrors: false }\n    case actions.GET_COMMENTS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport postsReducer from './postsReducer'\nimport postReducer from './postReducer'\nimport commentsReducer from './commentsReducer'\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  post: postReducer,\n  comments: commentsReducer,\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport App from './App'\nimport rootReducer from './reducers'\n\nimport './index.css'\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}